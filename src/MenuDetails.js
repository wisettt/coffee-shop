import React, { useState, useEffect } from "react";
import { useParams, useSearchParams, Link } from "react-router-dom";
import axios from "axios";
import { FontAwesomeIcon } from "@fortawesome/react-fontawesome";
import { faShoppingCart, faArrowLeft } from "@fortawesome/free-solid-svg-icons";
import "./MenuDetails.css";

const API_URL = "http://localhost:5000"; // ‚úÖ ‡πÉ‡∏ä‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏´‡∏•‡∏±‡∏Å

const MenuDetails = () => {
  const { id } = useParams();
  const [searchParams] = useSearchParams();
  const tableNumber = searchParams.get("table") || "1"; // ‚úÖ ‡∏î‡∏∂‡∏á‡∏Ñ‡πà‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡πÇ‡∏ï‡πä‡∏∞‡∏à‡∏≤‡∏Å URL
  const [menu, setMenu] = useState(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);

  useEffect(() => {
    const fetchMenuDetails = async () => {
      try {
        console.log("üåê Fetching all menus from:", `${API_URL}/api/menu/public-menu`);
        const response = await axios.get(`${API_URL}/api/menu/public-menu`);
        
        if (response.data.success && Array.isArray(response.data.data)) {
          // ‚úÖ ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÄ‡∏°‡∏ô‡∏π‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö ID ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£
          const selectedMenu = response.data.data.find((item) => item.id === parseInt(id));
          
          if (selectedMenu) {
            setMenu(selectedMenu);
          } else {
            setError("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏°‡∏ô‡∏π");
          }
        } else {
          setError("‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏°‡∏ô‡∏π‡πÑ‡∏î‡πâ");
        }
      } catch (error) {
        console.error("‚ùå Error fetching menus:", error.response ? error.response.data : error.message);
        setError("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏°‡∏ô‡∏π");
      } finally {
        setLoading(false);
      }
    };

    fetchMenuDetails();
  }, [id]);

  const addToCart = () => {
    if (!menu) return;

    const cart = JSON.parse(localStorage.getItem(`cart_table_${tableNumber}`)) || [];
    console.log(`üõí ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô‡πÇ‡∏ï‡πä‡∏∞ ${tableNumber}, ‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô:`, cart);

    const existingItemIndex = cart.findIndex((item) => item.id === menu.id);

    if (existingItemIndex >= 0) {
      cart[existingItemIndex].quantity += 1;
    } else {
      cart.push({ ...menu, quantity: 1 });
    }

    localStorage.setItem(`cart_table_${tableNumber}`, JSON.stringify(cart)); // ‚úÖ ‡πÅ‡∏¢‡∏Å‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡πÅ‡∏ï‡πà‡∏•‡∏∞‡πÇ‡∏ï‡πä‡∏∞
    alert(`‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏°‡∏ô‡∏π‡∏•‡∏á‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡πÇ‡∏ï‡πä‡∏∞‡∏ó‡∏µ‡πà ${tableNumber} ‡πÅ‡∏•‡πâ‡∏ß!`);
  };

  if (loading) return <div className="menu-details-loading">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î...</div>;
  if (error) return <div className="menu-details-error">{error}</div>;

  return (
    <div className="menu-details">
      {/* ‚úÖ ‡∏õ‡∏∏‡πà‡∏°‡πÑ‡∏õ‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤ ‡∏™‡πà‡∏á‡∏Ñ‡πà‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡πÇ‡∏ï‡πä‡∏∞‡πÑ‡∏õ OrderPage */}
      <div className="icon-group">
        <Link to={`/Orderpage?table=${tableNumber}`} className="icon-container">
          <FontAwesomeIcon icon={faShoppingCart} />
        </Link>
      </div>

      <header className="menu-details-header">
        {/* ‚úÖ ‡∏õ‡∏∏‡πà‡∏°‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏¢‡∏±‡∏á CoffeeShop ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Ñ‡πà‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡πÇ‡∏ï‡πä‡∏∞ */}
        <Link to={`/coffee-shop?table=${tableNumber}`} className="back-button">
          <FontAwesomeIcon icon={faArrowLeft} />
        </Link>
        <h1>{menu.name}</h1>
      </header>

      <div className="menu-details-content">
        {menu.image && (
          <img
            src={`${API_URL}${menu.image}`}
            alt={menu.name}
            className="menu-details-image"
          />
        )}
        <div className="menu-details-info">
          <p>
            <strong>‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏°‡∏ô‡∏π:</strong> {menu.name}
          </p>
          <p>
            <strong>‡∏£‡∏≤‡∏Ñ‡∏≤:</strong> {menu.price} ‡∏ö‡∏≤‡∏ó
          </p>
          <p>
            <strong>‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î:</strong> {menu.details}
          </p>
        </div>
        <button className="add-to-cart-button" onClick={addToCart}>
          ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏•‡∏á‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤
        </button>
      </div>
    </div>
  );
};

export default MenuDetails;
